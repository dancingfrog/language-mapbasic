{
  "scopeName": "source.mapbasic",
  "name": "MapBasic",
  "fileTypes":
  [
    "mb",
    "mbi"
  ],
  "patterns":
  [
    {
      "match": "\\\"[^\"]*\\\"",
      "name": "string.quoted.double.mapbasic"
    },
    {
      "match": "(;.*)$",
      "name": "comment.line.mapbasic"
    },
    {
      "match": "\\b(Break|ContinueElse|End|EndIf|ElseIf|Else|ForEach|ForEver|If|Next|Repeat|Sub|Until|Wend|While)\\b",
      "name": "keyword.control.mapbasic"
    },
    {
      "match": "\\b(And|Not|Or|XOr)\\b",
      "name": "keyword.operator.logical.mapbasic"
    },
    {
      "match": "(<|>|<>|<=|>=)",
      "name": "keyword.operator.comparison.mapbasic"
    },
    {
      "match": "=",
      "name": "keyword.operator.assignment.mapbasic"
    },
    {
      "match": "\\b(Debug|EnableExplicit|NewList|Enumeration|EndEnumeration|Procedure|ProcedureDLL|ProcedureReturn|EndProcedure|Macro|EndMacro|DataSection|EndDataSection|Structure|Extends|EndStructure|IncludeFile|XIncludeFile)\\b",
      "name": "keyword.other.mapbasic"
    },
    {
      "match": "\\b(Global|Protected|Static)\\b",
      "name": "storage.modifier.mapbasic"
    },
    {
      "match": "#([\\w_]+)\\b",
      "name": "constant.language.mapbasic"
    },
    {
      "match": "\\b\\d+(\\.\\d+)?\\b",
      "name": "constant.numeric.mapbasic"
    },
    {
      "match": "(\\b\\w[\\w\\d]*|[^\\w]@[\\w\\d]*)\\(",
      "captures":
      {
        "1":
        {
          "name": "entity.name.function.mapbasic"
        }
      }
    }
  ]
}
